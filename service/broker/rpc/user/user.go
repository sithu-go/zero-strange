// Code generated by goctl. DO NOT EDIT!
// Source: log.proto

package user

import (
	"context"

	"zero-strange/service/broker/rpc/types/log"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	LoginInfoReply = log.LoginInfoReply
	LoginReq       = log.LoginReq

	User interface {
		LogLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginInfoReply, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) LogLogin(ctx context.Context, in *LoginReq, opts ...grpc.CallOption) (*LoginInfoReply, error) {
	client := log.NewUserClient(m.cli.Conn())
	return client.LogLogin(ctx, in, opts...)
}
